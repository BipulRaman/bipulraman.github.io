{"version":3,"sources":["webpack://bipul-raman/./src/pages/blogs.js"],"names":["BlogsPage","useState","skipLastBlogId","setSkipLastBlogId","blogs","setBlogs","offset","setOffset","useEffect","BlogGetAllNew","response","error","console","window","document","y","updatedBlogs","Array","x","Title","BlogsPageMetadata","Description","key","index","blog"],"mappings":"6OASe,SAASA,IAAY,OAEUC,cAFV,GAE3BC,EAF2B,KAEXC,EAFW,QAGRF,cAHQ,MAG3BG,EAH2B,KAGpBC,EAHoB,QAINJ,cAJM,GAI3BK,EAJ2B,KAInBC,EAJmB,KAgDlC,OA1CAC,gBAAU,YACRC,iBACQ,iBACJ,IAAIC,GACF,OAAIN,IACFC,EAASK,EAATL,OACAF,EAAkBO,QAAeA,eAAfA,GAAlBP,YALRM,OASS,SAAAE,GACLC,oBAXNJ,KAeAA,gBAAU,WACR,oBAAWK,SACTA,gBAAkB,WAChBN,EAAUM,OAAVN,aACKM,mBAAqBA,OAArBA,QAAD,KAAgDC,cAApD,eAEEL,iBACQ,YACJ,YAAIC,GACF,OAAIN,EAAgB,CAClB,IAEIW,EAFJ,GACQC,OAAoBC,WAA5B,IACQC,OAASD,WAAWP,EAA5B,QACAL,EAJkB,GAMlBF,EAAkBO,QAAeA,eAAfA,GAAlBP,YATRM,OAaS,SAAAE,GACLC,sBAKT,CAzBHJ,IA4BE,yBACE,qBACEW,MAAOC,WACPC,YAAaD,mBAEbhB,SACA,oBADAA,MAEAA,EAAA,KAAU,cACR,OACE,gBAAC,WAAD,CAAgBkB,IAAKC,GACnB,qBAAaC,KAAMA","file":"component---src-pages-blogs-js-cbfe4481a0a2678bbf77.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from 'layout/Layout';\nimport BlogDisplay from 'components/BlogDisplay';\nimport Metadata from 'components/Metadata';\nimport { BlogsPageMetadata } from 'configs/PageMetadata';\nimport { BlogGetAll, BlogGetAllNew } from \"services/BlogService\";\nimport BlogSkeleton from 'components/BlogSkeleton';\nimport { skipCountDefault } from 'configs/SiteConfig';\n\nexport default function BlogsPage() {\n  //const [skipCount, setSkipCount] = useState(0);\n  const [skipLastBlogId, setSkipLastBlogId] = useState(0);\n  const [blogs, setBlogs] = useState(null);\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    BlogGetAllNew(skipLastBlogId)\n      .then((response) => {\n        if (response !== undefined) {\n          if (blogs === null) {\n            setBlogs(response.value);\n            setSkipLastBlogId(response.value[response.value.length -1].RowKey);\n          }\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [])\n\n  useEffect(() => {\n    if (typeof window !== `undefined`) {\n      window.onscroll = () => {\n        setOffset(window.pageYOffset);\n        if ((window.innerHeight + window.scrollY + 1000) >= document.body.offsetHeight) {\n          //var updatedCount = skipCount + skipCountDefault;\n          BlogGetAllNew(skipLastBlogId)\n            .then((response) => {\n              if (response !== undefined) {\n                if (blogs !== null) {\n                  var updatedBlogs = [];\n                  var x = updatedBlogs.concat(Array.from(blogs));\n                  var y = x.concat(Array.from(response.value));\n                  setBlogs(y);\n                  //setSkipCount(updatedCount);\n                  setSkipLastBlogId(response.value[response.value.length -1].RowKey);\n                }\n              }\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        }\n      }\n    }\n  }, [offset])\n\n  return (\n    <Layout>\n      <Metadata\n        Title={BlogsPageMetadata.Title}\n        Description={BlogsPageMetadata.Description}\n      />\n      { blogs === null ?\n        <BlogSkeleton /> :\n        blogs.map(function (blog, index) {\n          return (\n            <React.Fragment key={index}>\n              <BlogDisplay blog={blog} />\n            </React.Fragment>\n          )\n        })\n      }\n    </Layout>\n  );\n}"],"sourceRoot":""}