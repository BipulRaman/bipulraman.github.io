{"version":3,"sources":["webpack://bipul-raman/./src/pages/blogs.js"],"names":["BlogsPage","useState","skipCount","setSkipCount","blogs","setBlogs","offset","setOffset","useEffect","BlogGetAll","then","response","undefined","catch","error","console","log","window","onscroll","pageYOffset","innerHeight","scrollY","document","body","offsetHeight","updatedCount","skipCountDefault","y","concat","Array","from","Title","BlogsPageMetadata","Description","map","blog","index","key"],"mappings":"8OASe,SAASA,IAAa,IAAD,GACAC,cAAS,GAApCC,EAD2B,KAChBC,EADgB,QAERF,cAAS,MAA5BG,EAF2B,KAEpBC,EAFoB,QAGNJ,cAAS,GAA9BK,EAH2B,KAGnBC,EAHmB,KA6ClC,OAxCAC,gBAAU,YACRC,QAAWP,GACRQ,MAAK,SAACC,QACYC,IAAbD,GACY,OAAVP,GACFC,EAASM,MAIdE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,KAEHN,gBAAU,WACJ,oBAAOS,SACTA,OAAOC,SAAW,WAEhB,GADAX,EAAUU,OAAOE,aACZF,OAAOG,YAAcH,OAAOI,QAAU,KAASC,SAASC,KAAKC,aAAc,CAC9E,IAAIC,EAAevB,EAAYwB,MAC/BjB,QAAWgB,GACRf,MAAK,SAACC,GACL,QAAiBC,IAAbD,GACY,OAAVP,EAAgB,CAClB,IAEIuB,EAFe,GACEC,OAAOC,MAAMC,KAAK1B,IAC7BwB,OAAOC,MAAMC,KAAKnB,IAC5BN,EAASsB,GACTxB,EAAasB,OAIlBZ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,WAKrB,CAACR,IAGF,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEyB,MAAOC,WACPC,YAAaD,mBAEH,OAAV5B,EACA,gBAAC,IAAD,MACAA,EAAM8B,KAAI,SAAUC,EAAMC,GACxB,OACE,gBAAC,WAAD,CAAgBC,IAAKD,GACnB,gBAAC,IAAD,CAAaD,KAAMA","file":"component---src-pages-blogs-js-3b1a796f304a0c7384cf.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from '../layout/Layout';\nimport BlogDisplay from '../components/BlogDisplay';\nimport Metadata from '../components/Metadata';\nimport { BlogsPageMetadata } from '../configs/PageMetadata';\nimport { BlogGetAll } from \"../services/BlogService\";\nimport BlogSkeleton from '../components/BlogSkeleton';\nimport { skipCountDefault } from '../configs/SiteConfig';\n\nexport default function BlogsPage() {\n  const [skipCount, setSkipCount] = useState(0);\n  const [blogs, setBlogs] = useState(null);\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    BlogGetAll(skipCount)\n      .then((response) => {\n        if (response !== undefined) {\n          if (blogs === null) {\n            setBlogs(response);\n          }\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [])\n\n  useEffect(() => {\n    if (typeof window !== `undefined`) {\n      window.onscroll = () => {\n        setOffset(window.pageYOffset);\n        if ((window.innerHeight + window.scrollY + 1000) >= document.body.offsetHeight) {\n          var updatedCount = skipCount + skipCountDefault;\n          BlogGetAll(updatedCount)\n            .then((response) => {\n              if (response !== undefined) {\n                if (blogs !== null) {\n                  var updatedBlogs = [];\n                  var x = updatedBlogs.concat(Array.from(blogs));\n                  var y = x.concat(Array.from(response));\n                  setBlogs(y);\n                  setSkipCount(updatedCount);\n                }\n              }\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        }\n      }\n    }\n  }, [offset])\n\n  return (\n    <Layout>\n      <Metadata\n        Title={BlogsPageMetadata.Title}\n        Description={BlogsPageMetadata.Description}\n      />\n      { blogs === null ?\n        <BlogSkeleton /> :\n        blogs.map(function (blog, index) {\n          return (\n            <React.Fragment key={index}>\n              <BlogDisplay blog={blog} />\n            </React.Fragment>\n          )\n        })\n      }\n    </Layout>\n  );\n}"],"sourceRoot":""}