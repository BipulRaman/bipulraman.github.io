{"version":3,"sources":["webpack://bipul-raman/./src/pages/blogs.js"],"names":["BlogsPage","useState","skipCount","setSkipCount","blogs","setBlogs","offset","setOffset","useEffect","BlogGetAll","then","response","undefined","catch","error","console","log","window","onscroll","pageYOffset","innerHeight","scrollY","document","body","offsetHeight","updatedCount","skipCountDefault","y","concat","Array","from","Title","BlogsPageMetadata","Description","map","blog","index","key"],"mappings":"8OASe,SAASA,IAAa,IAAD,GACAC,cAAS,GAApCC,EAD2B,KAChBC,EADgB,QAERF,cAAS,MAA5BG,EAF2B,KAEpBC,EAFoB,QAGNJ,cAAS,GAA9BK,EAH2B,KAGnBC,EAHmB,KA6ClC,OAxCAC,gBAAU,YACRC,QAAWP,GACRQ,MAAK,SAACC,QACYC,IAAbD,GACY,OAAVP,GACFC,EAASM,MAIdE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,KAEHN,gBAAU,WACJ,oBAAOS,SACTA,OAAOC,SAAW,WAEhB,GADAX,EAAUU,OAAOE,aACZF,OAAOG,YAAcH,OAAOI,QAAU,KAASC,SAASC,KAAKC,aAAc,CAC9E,IAAIC,EAAevB,EAAYwB,MAC/BjB,QAAWgB,GACRf,MAAK,SAACC,GACL,QAAiBC,IAAbD,GACY,OAAVP,EAAgB,CAClB,IAEIuB,EAFe,GACEC,OAAOC,MAAMC,KAAK1B,IAC7BwB,OAAOC,MAAMC,KAAKnB,IAC5BN,EAASsB,GACTxB,EAAasB,OAIlBZ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,WAKrB,CAACR,IAGF,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEyB,MAAOC,WACPC,YAAaD,mBAEH,OAAV5B,EACA,gBAAC,IAAD,MACAA,EAAM8B,KAAI,SAAUC,EAAMC,GACxB,OACE,gBAAC,WAAD,CAAgBC,IAAKD,GACnB,gBAAC,IAAD,CAAaD,KAAMA","file":"component---src-pages-blogs-js-3b1a796f304a0c7384cf.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Layout from '../layout/Layout';\r\nimport BlogDisplay from '../components/BlogDisplay';\r\nimport Metadata from '../components/Metadata';\r\nimport { BlogsPageMetadata } from '../configs/PageMetadata';\r\nimport { BlogGetAll } from \"../services/BlogService\";\r\nimport BlogSkeleton from '../components/BlogSkeleton';\r\nimport { skipCountDefault } from '../configs/SiteConfig';\r\n\r\nexport default function BlogsPage() {\r\n  const [skipCount, setSkipCount] = useState(0);\r\n  const [blogs, setBlogs] = useState(null);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    BlogGetAll(skipCount)\r\n      .then((response) => {\r\n        if (response !== undefined) {\r\n          if (blogs === null) {\r\n            setBlogs(response);\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== `undefined`) {\r\n      window.onscroll = () => {\r\n        setOffset(window.pageYOffset);\r\n        if ((window.innerHeight + window.scrollY + 1000) >= document.body.offsetHeight) {\r\n          var updatedCount = skipCount + skipCountDefault;\r\n          BlogGetAll(updatedCount)\r\n            .then((response) => {\r\n              if (response !== undefined) {\r\n                if (blogs !== null) {\r\n                  var updatedBlogs = [];\r\n                  var x = updatedBlogs.concat(Array.from(blogs));\r\n                  var y = x.concat(Array.from(response));\r\n                  setBlogs(y);\r\n                  setSkipCount(updatedCount);\r\n                }\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      }\r\n    }\r\n  }, [offset])\r\n\r\n  return (\r\n    <Layout>\r\n      <Metadata\r\n        Title={BlogsPageMetadata.Title}\r\n        Description={BlogsPageMetadata.Description}\r\n      />\r\n      { blogs === null ?\r\n        <BlogSkeleton /> :\r\n        blogs.map(function (blog, index) {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <BlogDisplay blog={blog} />\r\n            </React.Fragment>\r\n          )\r\n        })\r\n      }\r\n    </Layout>\r\n  );\r\n}"],"sourceRoot":""}