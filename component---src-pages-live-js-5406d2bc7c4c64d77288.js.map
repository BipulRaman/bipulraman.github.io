{"version":3,"file":"component---src-pages-live-js-5406d2bc7c4c64d77288.js","mappings":"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","sources":["webpack://bipul-raman/./src/pages/live.js","webpack://bipul-raman/./src/configs/APIConfig.js","webpack://bipul-raman/./src/services/BlogService.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from 'layout/Layout';\nimport { GetSiteConfig, GetSiteConfigNew } from \"services/BlogService\";\nimport { Images } from 'configs/SiteConfig';\nimport { LivePageMetadata } from 'configs/PageMetadata';\nimport Metadata from 'components/Metadata';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        margin: 20,\n        padding: 20,\n        height: \"80vh\",\n    },\n    rootNoLive: {\n        margin: 20,\n        padding: 20,\n    },\n    sectionTitle: {\n        paddingBottom: 10\n    },\n    videoContainer: {\n        margin: 20,\n        padding: 20,\n        position: \"relative\",\n        paddingBottom: \"53%\",\n        height: \"0\"\n    },\n    video: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"95%\",\n        height: \"95%\"\n    },\n    img: {\n        maxWidth: \"560px\",\n        width: \"100%\"\n    }\n}));\n\nexport default function LivePage() {\n    const classes = useStyles();\n    const [ytLiveUrlKey, setYTLiveUrlKey] = useState(null);\n\n    useEffect(() => {\n        GetSiteConfigNew()\n            .then((response) => {\n                if (response !== undefined) {\n                    console.log(response.value);\n                    var result = response.value.find(t => t.RowKey === 'YTLiveUrlKey').value;\n                    setYTLiveUrlKey(result);\n                }\n            });\n    }, []);\n\n    return (\n        <Layout>\n            { !ytLiveUrlKey ?\n                <Paper elevation={3} className={classes.rootNoLive}>\n                    <Typography variant=\"h6\" className={classes.sectionTitle}>\n                        Bipul is not Livestreaming right now.\n                    </Typography>\n                    <br /><br />\n                    <img src={Images.NotLive} className={classes.img} alt=\"Bipul is not Livestreaming.\"></img>\n                </Paper>\n                :\n\n                <div className={classes.videoContainer}>\n                    <iframe title=\"LiveStream\" src={\"https://www.youtube-nocookie.com/embed/\" + ytLiveUrlKey} frameborder=\"0\" allowfullscreen className={classes.video}></iframe>\n                </div>\n\n            }\n            <Metadata\n                Title={LivePageMetadata.Title}\n                Description={LivePageMetadata.Description}\n            />\n        </Layout>\n    );\n}\n","export const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n\nexport const BlogAPIEndpoint = {\n    Create: \"https://bipulappapi.azurewebsites.net/api/BlogCreate\",\n    CreateNew: \"https://bipulappapi.azurewebsites.net/api/BlogNew\",\n    Delete: \"https://bipulappapi.azurewebsites.net/api/BlogDelete\",\n    GetOneBlog: \"https://bipulapppublicapi.azurewebsites.net/api/Blog\",\n    GetBlogs: \"https://bipulapppublicapi.azurewebsites.net/api/Blogs\",\n    GetSiteConfig: \"https://bipulapppublicapi.azurewebsites.net/api/SiteConfig\"\n};\n\nexport const AzStorageRestAPI = {\n    GetOneBlog: \"https://bipulappstorage.table.core.windows.net/Blogs?sv=2018-03-28&si=ViewBlogs&tn=blogs&sig=mPxjbfPbdqcc3PA%2BNhomdaUkkNAv%2BTUyu8lXC%2Fc2%2FVY%3D\",\n    GetBlogs: \"https://bipulappstorage.table.core.windows.net/Blogs?sv=2018-03-28&si=ViewBlogs&tn=blogs&sig=mPxjbfPbdqcc3PA%2BNhomdaUkkNAv%2BTUyu8lXC%2Fc2%2FVY%3D&$top=5\",\n    GetSiteConfig: \"https://bipulappstorage.table.core.windows.net/Config?sv=2018-03-28&si=ViewConfig&tn=config&sig=xcIl81rzfecn2QMunp5hG4VTp7BzTB4PRLWmSM1Y9Fc%3D\"\n};\n\nexport const BlogAPIEndpoint1 = {\n    Create: \"http://localhost:7071/api/BlogCreate\",\n    CreateNew: \"http://localhost:7071/api/BlogNew\",\n    Delete: \"http://localhost:7071/api/BlogDelete\",\n    GetById: \"http://localhost:7071/api/BlogGetById\"\n};","import { BlogAPIEndpoint, AzStorageRestAPI  } from \"configs/APIConfig\";\n\nexport async function BlogCreate(accessToken, data) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    headers.append(\"Content-Type\", \"application/json\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(data)\n    };\n\n    return fetch(BlogAPIEndpoint.Create, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogNew(accessToken, formData) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: formData\n    };\n\n    return fetch(BlogAPIEndpoint.CreateNew, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogDelete(accessToken, blogId) {\n    \n    const requestOptions = {\n        method: 'DELETE',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Authorization': 'Bearer ' + accessToken\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.Delete + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetById(blogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetOneBlog + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetAll(skipCount) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetBlogs + '/' + skipCount, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function GetSiteConfig() {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetSiteConfig, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\n// Az Storage REST API\n\nexport async function BlogGetByIdNew(blogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Accept\": \"application/json;odata=nometadata\"\n        }\n    };\n\n    return fetch(AzStorageRestAPI.GetOneBlog + \"&$filter=RowKey%20eq%20'\"+ blogId +\"'\", requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetAllNew(skipLastBlogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: {            \n            \"Accept\": \"application/json;odata=nometadata\"\n        }\n    };\n\n    return fetch(AzStorageRestAPI.GetBlogs + \"&$filter=RowKey%20gt%20'\"+ skipLastBlogId +\"'\", requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function GetSiteConfigNew() {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Accept\": \"application/json;odata=nometadata\"\n        }\n    };\n\n    return fetch(AzStorageRestAPI.GetSiteConfig, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}"],"names":["useStyles","makeStyles","root","margin","padding","height","rootNoLive","sectionTitle","paddingBottom","videoContainer","position","video","top","left","width","img","maxWidth","LivePage","classes","useState","ytLiveUrlKey","setYTLiveUrlKey","useEffect","GetSiteConfigNew","then","response","undefined","console","log","value","result","find","t","RowKey","className","title","src","frameborder","allowfullscreen","elevation","variant","Images","alt","Title","LivePageMetadata","Description","BlogAPIEndpoint","AzStorageRestAPI","BlogNew","accessToken","formData","headers","Headers","bearer","append","requestOptions","method","body","fetch","json","catch","error","BlogDelete","blogId","BlogGetById","GetSiteConfig","BlogGetByIdNew","BlogGetAllNew","skipLastBlogId"],"sourceRoot":""}