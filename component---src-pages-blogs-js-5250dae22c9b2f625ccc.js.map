{"version":3,"file":"component---src-pages-blogs-js-5250dae22c9b2f625ccc.js","mappings":"+OASe,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,UAAlC,GAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAA1B,MAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAA5B,GAAOK,EAAP,KAAeC,EAAf,KA0CA,OAxCAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAAA,GAAAA,MACQ,iBACJ,IAAIC,GACF,OAAIN,GACFC,EAAAA,MAJRI,OAQS,SAAAE,GACLC,QAAAA,IAAAA,QAVNJ,KAcAA,EAAAA,EAAAA,YAAU,WACR,oBAAWK,SACTA,OAAAA,SAAkB,WAEhB,GADAN,EAAUM,OAAVN,aACKM,OAAAA,YAAqBA,OAArBA,QAAD,KAAgDC,SAAAA,KAApD,aAAgF,CAC9E,IAAIC,EAAeb,EAAnB,MACAO,EAAAA,EAAAA,IAAAA,GAAAA,MACQ,YACJ,YAAIC,GACF,OAAIN,EAAgB,CAClB,IAEIY,EAFJ,GACQC,OAAoBC,MAAAA,KAA5B,IACQC,OAASD,MAAAA,KAAjB,IACAb,EAAAA,GACAF,EAAAA,OARRM,OAYS,SAAAE,GACLC,QAAAA,IAAAA,WAKT,CAxBHJ,IA2BE,yBACE,qBACEY,MAAOC,EAAAA,GAAAA,MACPC,YAAaD,EAAAA,GAAAA,cAEbjB,OAAAA,EACA,oBADAA,MAEAA,EAAA,KAAU,SAAUmB,EAAMC,GACxB,OACE,gBAAC,WAAD,CAAgBC,IAAKD,GACnB,qBAAaD,KAAMA","sources":["webpack://bipul-raman/./src/pages/blogs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from 'layout/Layout';\nimport BlogDisplay from 'components/BlogDisplay';\nimport Metadata from 'components/Metadata';\nimport { BlogsPageMetadata } from 'configs/PageMetadata';\nimport { BlogGetAll } from \"services/BlogService\";\nimport BlogSkeleton from 'components/BlogSkeleton';\nimport { skipCountDefault } from 'configs/SiteConfig';\n\nexport default function BlogsPage() {\n  const [skipCount, setSkipCount] = useState(0);\n  const [blogs, setBlogs] = useState(null);\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    BlogGetAll(skipCount)\n      .then((response) => {\n        if (response !== undefined) {\n          if (blogs === null) {\n            setBlogs(response);\n          }\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [])\n\n  useEffect(() => {\n    if (typeof window !== `undefined`) {\n      window.onscroll = () => {\n        setOffset(window.pageYOffset);\n        if ((window.innerHeight + window.scrollY + 1000) >= document.body.offsetHeight) {\n          var updatedCount = skipCount + skipCountDefault;\n          BlogGetAll(updatedCount)\n            .then((response) => {\n              if (response !== undefined) {\n                if (blogs !== null) {\n                  var updatedBlogs = [];\n                  var x = updatedBlogs.concat(Array.from(blogs));\n                  var y = x.concat(Array.from(response));\n                  setBlogs(y);\n                  setSkipCount(updatedCount);\n                }\n              }\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        }\n      }\n    }\n  }, [offset])\n\n  return (\n    <Layout>\n      <Metadata\n        Title={BlogsPageMetadata.Title}\n        Description={BlogsPageMetadata.Description}\n      />\n      { blogs === null ?\n        <BlogSkeleton /> :\n        blogs.map(function (blog, index) {\n          return (\n            <React.Fragment key={index}>\n              <BlogDisplay blog={blog} />\n            </React.Fragment>\n          )\n        })\n      }\n    </Layout>\n  );\n}"],"names":["BlogsPage","useState","skipCount","setSkipCount","blogs","setBlogs","offset","setOffset","useEffect","BlogGetAll","response","error","console","window","document","updatedCount","y","updatedBlogs","Array","x","Title","BlogsPageMetadata","Description","blog","index","key"],"sourceRoot":""}