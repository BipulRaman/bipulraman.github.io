{"version":3,"file":"component---src-pages-blogs-js-93e10873665fb66e96dd.js","mappings":"6OASe,SAASA,IAEtB,OAA4CC,EAAAA,EAAAA,UAAS,GAA9CC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAA5BG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,GAA9BK,EAAP,KAAeC,EAAf,KA4CA,OA1CAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcP,GACXQ,MAAK,SAACC,QACYC,IAAbD,GACY,OAAVP,IACFC,EAASM,EAASE,OAClBV,EAAkBQ,EAASE,MAAMF,EAASE,MAAMC,OAAQ,GAAGC,YAIhEC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,KAEHT,EAAAA,EAAAA,YAAU,WACJ,oBAAOY,SACTA,OAAOC,SAAW,WAChBd,EAAUa,OAAOE,aACZF,OAAOG,YAAcH,OAAOI,QAAU,KAASC,SAASC,KAAKC,eAEhElB,EAAAA,EAAAA,IAAcP,GACXQ,MAAK,SAACC,GACL,QAAiBC,IAAbD,GACY,OAAVP,EAAgB,CAClB,IAEIwB,EAFe,GACEC,OAAOC,MAAMC,KAAK3B,IAC7ByB,OAAOC,MAAMC,KAAKpB,EAASE,QACrCR,EAASuB,GAETzB,EAAkBQ,EAASE,MAAMF,EAASE,MAAMC,OAAQ,GAAGC,YAIhEC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,UAKrB,CAACX,IAGF0B,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAACE,EAAAA,EAAD,CACEC,MAAOC,EAAAA,GAAAA,MACPC,YAAaD,EAAAA,GAAAA,cAEH,OAAVhC,EACA4B,EAAAA,cAACM,EAAAA,EAAD,MACAlC,EAAMmC,KAAI,SAAUC,EAAMC,GACxB,OACET,EAAAA,cAACA,EAAAA,SAAD,CAAgBU,IAAKD,GACnBT,EAAAA,cAACW,EAAAA,EAAD,CAAaH,KAAMA","sources":["webpack://bipul-raman/./src/pages/blogs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from 'layout/Layout';\nimport BlogDisplay from 'components/BlogDisplay';\nimport Metadata from 'components/Metadata';\nimport { BlogsPageMetadata } from 'configs/PageMetadata';\nimport { BlogGetAll, BlogGetAllNew } from \"services/BlogService\";\nimport BlogSkeleton from 'components/BlogSkeleton';\nimport { skipCountDefault } from 'configs/SiteConfig';\n\nexport default function BlogsPage() {\n  //const [skipCount, setSkipCount] = useState(0);\n  const [skipLastBlogId, setSkipLastBlogId] = useState(0);\n  const [blogs, setBlogs] = useState(null);\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    BlogGetAllNew(skipLastBlogId)\n      .then((response) => {\n        if (response !== undefined) {\n          if (blogs === null) {\n            setBlogs(response.value);\n            setSkipLastBlogId(response.value[response.value.length -1].RowKey);\n          }\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [])\n\n  useEffect(() => {\n    if (typeof window !== `undefined`) {\n      window.onscroll = () => {\n        setOffset(window.pageYOffset);\n        if ((window.innerHeight + window.scrollY + 1000) >= document.body.offsetHeight) {\n          //var updatedCount = skipCount + skipCountDefault;\n          BlogGetAllNew(skipLastBlogId)\n            .then((response) => {\n              if (response !== undefined) {\n                if (blogs !== null) {\n                  var updatedBlogs = [];\n                  var x = updatedBlogs.concat(Array.from(blogs));\n                  var y = x.concat(Array.from(response.value));\n                  setBlogs(y);\n                  //setSkipCount(updatedCount);\n                  setSkipLastBlogId(response.value[response.value.length -1].RowKey);\n                }\n              }\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        }\n      }\n    }\n  }, [offset])\n\n  return (\n    <Layout>\n      <Metadata\n        Title={BlogsPageMetadata.Title}\n        Description={BlogsPageMetadata.Description}\n      />\n      { blogs === null ?\n        <BlogSkeleton /> :\n        blogs.map(function (blog, index) {\n          return (\n            <React.Fragment key={index}>\n              <BlogDisplay blog={blog} />\n            </React.Fragment>\n          )\n        })\n      }\n    </Layout>\n  );\n}"],"names":["BlogsPage","useState","skipLastBlogId","setSkipLastBlogId","blogs","setBlogs","offset","setOffset","useEffect","BlogGetAllNew","then","response","undefined","value","length","RowKey","catch","error","console","log","window","onscroll","pageYOffset","innerHeight","scrollY","document","body","offsetHeight","y","concat","Array","from","React","Layout","Metadata","Title","BlogsPageMetadata","Description","BlogSkeleton","map","blog","index","key","BlogDisplay"],"sourceRoot":""}