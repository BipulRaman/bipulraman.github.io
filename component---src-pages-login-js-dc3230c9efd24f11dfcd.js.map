{"version":3,"sources":["webpack://bipul-raman/./src/configs/APIConfig.js","webpack://bipul-raman/./src/pages/login.js","webpack://bipul-raman/./src/services/BlogService.js","webpack://bipul-raman/./src/services/GraphService.js"],"names":["graphConfig","graphMeEndpoint","BlogAPIEndpoint","Create","Delete","GetById","useStyles","makeStyles","root","margin","padding","sectionTitle","paddingBottom","LoginPage","classes","useMsal","instance","accounts","inProgress","account","useAccount","InteractionStatus","console","callMsGraph","response","BlogGetById","elevation","className","variant","Title","LoginPageMetadata","Description","requestOptions","method","headers","accessToken","body","JSON","fetch","error","bearer","options"],"mappings":"wKAAO,IAAMA,EAAc,CACvBC,gBAAiB,uCAGRC,EAAkB,CAC3BC,OAD2B,uDAE3BC,OAF2B,uDAG3BC,QAAS,0D,kNCQPC,GAAYC,QAAW,kBAAY,CACrCC,KAAM,CACFC,OADE,GAEFC,QAAS,IAEbC,aAAc,CACVC,cAAe,QAKR,SAASC,IACpB,IAAMC,EAAUR,IADgB,GAEWS,UAAnCC,EAFwB,WAEdC,EAFc,WAEJC,EAFI,aAG1BC,GAAUC,QAAWH,MAA3B,IAcA,OAZIE,GAAWD,IAAeG,WAC1BL,2CAEIG,QAASA,KAFbH,MAGQ,YACJM,YAAYH,EAAZG,OACAC,OAAYC,EAAZD,mBAAuC,SAAAC,GAAQ,OAAIF,YAAJ,UAIvDG,gCAAmC,SAAAD,GAAQ,OAAIF,YAAJ,MAGvC,yBACI,qBAAOI,UAAP,EAAqBC,UAAWb,EAAQN,MACpC,qBAAYoB,QAAZ,KAAyBD,UAAWb,EAAQH,cACxC,0BACA,qBAAYiB,QAAQ,MAChB,8BAHR,gBAOI,0BACI,qBAAYA,QAAQ,MACpB,8BAXhB,uDAgBI,qBACJC,MAAOC,WACPC,YAAaD,sB,sIC5DrB,+C,wCAAO,8FAEGE,EAAiB,CACnBC,OADmB,OAEnBC,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAHK,mBAIL,cAAiB,UAAYC,GAEjCC,KAAMC,mBAVP,kBAaIC,MAAMpC,YAAN,SACG,SAAAsB,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAIjB,YAAJ,OAfb,4C,sBAmCP,6C,wCAAO,4FAEGU,EAAiB,CACnBC,OADmB,MAEnBC,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAAgB,qBAPrB,kBAWII,MAAMpC,iBAAD,EAAL,SACG,SAAAsB,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAIjB,YAAJ,OAbb,4C,qICnCP,6C,wCAAO,gGACGY,EAAU,IADb,QAEGM,EAFH,YAIHN,4BAEMO,EAAU,CACZR,OADY,MAEZC,QAASA,GARV,kBAWII,MAAMtC,qBAAN,SACG,SAAAwB,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAIjB,YAAJ,OAbb,4C","file":"component---src-pages-login-js-dc3230c9efd24f11dfcd.js","sourcesContent":["export const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n\nexport const BlogAPIEndpoint = {\n    Create: \"https://bipulappapi.azurewebsites.net/api/BlogCreate\",\n    Delete: \"https://bipulappapi.azurewebsites.net/api/BlogDelete\",\n    GetById: \"https://bipulappapi.azurewebsites.net/api/BlogGetById\"\n};\n\nexport const BlogAPIEndpoint1 = {\n    Create: \"http://localhost:7071/api/BlogCreate\",\n    Delete: \"http://localhost:7071/api/BlogDelete\",\n    GetById: \"http://localhost:7071/api/BlogGetById\"\n};","import React, { useEffect, useState } from \"react\";\nimport Layout from '../layout/Layout';\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\nimport Metadata from '../components/Metadata';\nimport {LoginPageMetadata} from '../configs/PageMetadata';\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from \"@azure/msal-react\";\n\nimport { useMsal, useAccount } from \"@azure/msal-react\";\nimport { InteractionStatus} from \"@azure/msal-browser\";\nimport { loginRequest } from \"../configs/AuthConfig\";\nimport { callMsGraph } from \"../services/GraphService\";\nimport {BlogGetById} from \"../services/BlogService\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: 20,\n        padding: 20\n    },\n    sectionTitle: {\n        paddingBottom: 10\n    }\n}));\n\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const { instance, accounts, inProgress } = useMsal();\n    const account = useAccount(accounts[0] || {});\n\n    if (account && inProgress === InteractionStatus.None) {\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: account\n        }).then((response) => {\n            console.log(account.name);\n            callMsGraph(response.accessToken).then(response => console.log(response));\n        });\n    }  \n    \n    BlogGetById(\"20210312064310\").then(response => console.log(response));\n\n    return (\n        <Layout>\n            <Paper elevation={3} className={classes.root} >\n                <Typography variant=\"h6\" className={classes.sectionTitle}>\n                    <AuthenticatedTemplate>\n                    <Typography variant=\"h6\">\n                        <center>Logged-In.</center>\n                        </Typography>\n                    </AuthenticatedTemplate>\n\n                    <UnauthenticatedTemplate>\n                        <Typography variant=\"h6\">\n                        <center>Please sign-in to see your profile information.</center>\n                        </Typography>\n                    </UnauthenticatedTemplate>\n                </Typography>              \n            </Paper>\n            <Metadata\n        Title={LoginPageMetadata.Title}\n        Description={LoginPageMetadata.Description}\n      />\n        </Layout>\n    );\n}\n","import { BlogAPIEndpoint } from \"../configs/APIConfig\";\n\nexport async function BlogCreate(accessToken, data) {\n    \n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + accessToken\n        },\n        body: JSON.stringify(data)\n    };\n\n    return fetch(BlogAPIEndpoint.Create, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogDelete(accessToken, blogId) {\n    \n    const requestOptions = {\n        method: 'DELETE',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + accessToken\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.Create + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetById(blogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetById + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}","import { graphConfig } from \"../configs/APIConfig\";\n\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}"],"sourceRoot":""}