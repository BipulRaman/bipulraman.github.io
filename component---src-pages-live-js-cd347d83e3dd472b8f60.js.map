{"version":3,"sources":["webpack://bipul-raman/./src/pages/live.js","webpack://bipul-raman/./src/configs/APIConfig.js","webpack://bipul-raman/./src/services/BlogService.js"],"names":["useStyles","makeStyles","root","margin","padding","height","rootNoLive","sectionTitle","paddingBottom","videoContainer","position","video","top","left","width","img","maxWidth","LivePage","classes","useState","ytLiveUrlKey","setYTLiveUrlKey","useEffect","GetSiteConfig","response","result","t","className","title","src","frameborder","allowfullscreen","elevation","variant","Images","alt","Title","LivePageMetadata","Description","BlogAPIEndpoint","headers","bearer","requestOptions","method","body","formData","fetch","error","console","accessToken"],"mappings":"uPAUMA,GAAYC,QAAW,iBAAO,CAChCC,KAAM,CACFC,OADE,GAEFC,QAFE,GAGFC,OAAQ,QAEZC,WAAY,CACRH,OADQ,GAERC,QAAS,IAEbG,aAAc,CACVC,cAAe,IAEnBC,eAAgB,CACZN,OADY,GAEZC,QAFY,GAGZM,SAHY,WAIZF,cAJY,MAKZH,OAAQ,KAEZM,MAAO,CACHD,SADG,WAEHE,IAFG,EAGHC,KAHG,EAIHC,MAJG,MAKHT,OAAQ,OAEZU,IAAK,CACDC,SADC,QAEDF,MAAO,YAIA,SAASG,IACpB,IAAMC,EAAUlB,IADe,GAESmB,cAFT,MAExBC,EAFwB,KAEVC,EAFU,KAc/B,OAVAC,gBAAU,YACNC,gBACU,YACF,YAAIC,EAAwB,CACxB,IAAIC,EAASD,EAAA,MAAc,SAAAE,GAAC,uBAAIA,YAAhC,MACAL,WALhBC,IAWI,yBACOF,EAUC,uBAAKO,UAAWT,EAAQT,gBACpB,0BAAQmB,MAAR,aAA2BC,IAAK,0CAAhC,EAA0FC,YAA1F,IAA0GC,iBAA1G,EAA0HJ,UAAWT,EAAQP,SAVjJ,qBAAOqB,UAAP,EAAqBL,UAAWT,EAAQZ,YACpC,qBAAY2B,QAAZ,KAAyBN,UAAWT,EAAQX,cADhD,yCAII,qBAJJ,MAIU,qBAJV,MAKI,uBAAKsB,IAAKK,aAAgBP,UAAWT,EAArC,IAAkDiB,IAAI,iCAS9D,qBACIC,MAAOC,WACPC,YAAaD,sB,oMCxEhBE,EAAkB,oDAAlBA,EAAkB,uDAAlBA,EAAkB,uDAAlBA,EAAkB,wDAAlBA,EAMM,6DCYnB,+C,wCAAO,kGACGC,EAAU,IADb,QAEGC,EAFH,YAIHD,4BACAA,4CACAA,0FAEME,EAAiB,CACnBC,OADmB,OAEnBH,QAFmB,EAGnBI,KAAMC,GAXP,kBAcIC,MAAMP,EAAN,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAhBb,4C,sBAmBP,+C,wCAAO,8FAEGN,EAAiB,CACnBC,OADmB,SAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,cAAiB,UAAYS,IAPlC,kBAWIH,MAAMP,MAAD,EAAL,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAbb,4C,sBAgBP,6C,wCAAO,4FAEGN,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAAgB,qBAPrB,kBAWIM,MAAMP,MAAD,EAAL,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAbb,4C,sBAgBP,6C,wCAAO,4FAEGN,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAAgB,qBAPrB,kBAWIM,MAAMP,MAAD,EAAL,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAbb,4C,sBAgBP,4C,wCAAO,2FAEGN,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAAgC,mDANrC,kBAUIM,MAAMP,EAAN,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAZb,4C","file":"component---src-pages-live-js-cd347d83e3dd472b8f60.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from '../layout/Layout';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { GetSiteConfig } from \"../services/BlogService\";\nimport { Images } from '../configs/SiteConfig';\nimport { LivePageMetadata } from '../configs/PageMetadata';\nimport Metadata from '../components/Metadata';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        margin: 20,\n        padding: 20,\n        height: \"80vh\",\n    },\n    rootNoLive: {\n        margin: 20,\n        padding: 20,\n    },\n    sectionTitle: {\n        paddingBottom: 10\n    },\n    videoContainer: {\n        margin: 20,\n        padding: 20,\n        position: \"relative\",\n        paddingBottom: \"53%\",\n        height: \"0\"\n    },\n    video: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"95%\",\n        height: \"95%\"\n    },\n    img: {\n        maxWidth: \"560px\",\n        width: \"100%\"\n    }\n}));\n\nexport default function LivePage() {\n    const classes = useStyles();\n    const [ytLiveUrlKey, setYTLiveUrlKey] = useState(null);\n\n    useEffect(() => {\n        GetSiteConfig()\n            .then((response) => {\n                if (response !== undefined) {\n                    var result = response.find(t => t.rowKey === 'YTLiveUrlKey').value;\n                    setYTLiveUrlKey(result);\n                }\n            });\n    }, []);\n\n    return (\n        <Layout>\n            { !ytLiveUrlKey ?\n                <Paper elevation={3} className={classes.rootNoLive}>\n                    <Typography variant=\"h6\" className={classes.sectionTitle}>\n                        Bipul is not Livestreaming right now.\n                    </Typography>\n                    <br /><br />\n                    <img src={Images.NotLive} className={classes.img} alt=\"Bipul is not Livestreaming.\"></img>\n                </Paper>\n                :\n\n                <div className={classes.videoContainer}>\n                    <iframe title=\"LiveStream\" src={\"https://www.youtube-nocookie.com/embed/\" + ytLiveUrlKey} frameborder=\"0\" allowfullscreen className={classes.video}></iframe>\n                </div>\n\n            }\n            <Metadata\n                Title={LivePageMetadata.Title}\n                Description={LivePageMetadata.Description}\n            />\n        </Layout>\n    );\n}\n","export const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n\nexport const BlogAPIEndpoint = {\n    Create: \"https://bipulappapi.azurewebsites.net/api/BlogCreate\",\n    CreateNew: \"https://bipulappapi.azurewebsites.net/api/BlogNew\",\n    Delete: \"https://bipulappapi.azurewebsites.net/api/BlogDelete\",\n    GetOneBlog: \"https://bipulapppublicapi.azurewebsites.net/api/Blog\",\n    GetBlogs: \"https://bipulapppublicapi.azurewebsites.net/api/Blogs\",\n    GetSiteConfig: \"https://bipulapppublicapi.azurewebsites.net/api/SiteConfig\"\n};\n\nexport const BlogAPIEndpoint1 = {\n    Create: \"http://localhost:7071/api/BlogCreate\",\n    CreateNew: \"http://localhost:7071/api/BlogNew\",\n    Delete: \"http://localhost:7071/api/BlogDelete\",\n    GetById: \"http://localhost:7071/api/BlogGetById\"\n};","import { BlogAPIEndpoint } from \"../configs/APIConfig\";\n\nexport async function BlogCreate(accessToken, data) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    headers.append(\"Content-Type\", \"application/json\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(data)\n    };\n\n    return fetch(BlogAPIEndpoint.Create, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogNew(accessToken, formData) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: formData\n    };\n\n    return fetch(BlogAPIEndpoint.CreateNew, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogDelete(accessToken, blogId) {\n    \n    const requestOptions = {\n        method: 'DELETE',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Authorization': 'Bearer ' + accessToken\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.Delete + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetById(blogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetOneBlog + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetAll(skipCount) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetBlogs + '/' + skipCount, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function GetSiteConfig() {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetSiteConfig, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}"],"sourceRoot":""}