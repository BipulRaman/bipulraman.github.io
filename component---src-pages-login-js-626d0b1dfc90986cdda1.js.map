{"version":3,"file":"component---src-pages-login-js-626d0b1dfc90986cdda1.js","mappings":"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","sources":["webpack://bipul-raman/./src/components/DisplayError.js","webpack://bipul-raman/./src/components/DisplayLoading.js","webpack://bipul-raman/./src/pages/login.js","webpack://bipul-raman/./src/configs/APIConfig.js","webpack://bipul-raman/./src/services/BlogService.js"],"sourcesContent":["import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const DisplayError = ({error}) => {\n    return <Typography variant=\"h6\">An Error Occurred: {error.errorCode}</Typography>;\n}","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const DisplayLoading = () => {\n    return <Typography variant=\"h6\">Authentication in progress...</Typography>\n}","import React, { useEffect, useState } from \"react\";\nimport { Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useMsal, useAccount } from \"@azure/msal-react\";\nimport { MsalAuthenticationTemplate } from \"@azure/msal-react\";\nimport { AuthenticatedTemplate } from \"@azure/msal-react\";\nimport { InteractionType } from \"@azure/msal-browser\";\nimport Metadata from 'components/Metadata';\nimport { LoginPageMetadata } from 'configs/PageMetadata';\nimport Layout from 'layout/Layout';\nimport { loginRequest } from \"configs/AuthConfig\";\nimport { DisplayLoading } from \"components/DisplayLoading\";\nimport { DisplayError } from \"components/DisplayError\";\nimport { GetSiteConfig } from \"services/BlogService\";\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        margin: 20,\n        padding: 20\n    }\n}));\n\n\nexport default function LoginPage() {\n    const classes = useStyles();\n    const { accounts } = useMsal();\n    const account = useAccount(accounts[0] || {});\n    const authRequest = {\n        ...loginRequest\n    };\n    const [isAPIActive, setIsAPIActive] = useState(false);\n\n    useEffect(() => {\n        GetSiteConfig()\n            .then((response) => {\n                if (response !== undefined) {\n                    setIsAPIActive(true);\n                }\n            });\n    }, []);\n\n    return (\n        <Layout>\n            <Paper elevation={3} className={classes.root} >\n                <MsalAuthenticationTemplate\n                    interactionType={InteractionType.Redirect}\n                    authenticationRequest={authRequest}\n                    errorComponent={DisplayError}\n                    loadingComponent={DisplayLoading}\n                >\n                    <AuthenticatedTemplate>\n                        {account &&\n                            <Typography variant=\"h6\">\n                                Welcome {account.name}! You are successfully logged-in.\n                            </Typography>\n                        }\n                        {isAPIActive == true ?\n                            <Typography paragraph className={classes.sectionTitle}>\n                                Blog Creation API is active now.\n                            </Typography>\n                            :\n\n                            <Typography paragraph className={classes.sectionTitle}>\n                                Blog Creation API is not active right now.\n                            </Typography>\n                        }\n                    </AuthenticatedTemplate>\n\n                </MsalAuthenticationTemplate>\n            </Paper>\n            <Metadata\n                Title={LoginPageMetadata.Title}\n                Description={LoginPageMetadata.Description}\n            />\n        </Layout>\n    );\n}\n","export const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n\nexport const BlogAPIEndpoint = {\n    Create: \"https://bipulappapi.azurewebsites.net/api/BlogCreate\",\n    CreateNew: \"https://bipulappapi.azurewebsites.net/api/BlogNew\",\n    Delete: \"https://bipulappapi.azurewebsites.net/api/BlogDelete\",\n    GetOneBlog: \"https://bipulapppublicapi.azurewebsites.net/api/Blog\",\n    GetBlogs: \"https://bipulapppublicapi.azurewebsites.net/api/Blogs\",\n    GetSiteConfig: \"https://bipulapppublicapi.azurewebsites.net/api/SiteConfig\"\n};\n\nexport const AzStorageRestAPI = {\n    GetOneBlog: \"https://bipulappstorage.table.core.windows.net/Blogs?sv=2018-03-28&si=ViewBlogs&tn=blogs&sig=mPxjbfPbdqcc3PA%2BNhomdaUkkNAv%2BTUyu8lXC%2Fc2%2FVY%3D\",\n    GetBlogs: \"https://bipulappstorage.table.core.windows.net/Blogs?sv=2018-03-28&si=ViewBlogs&tn=blogs&sig=mPxjbfPbdqcc3PA%2BNhomdaUkkNAv%2BTUyu8lXC%2Fc2%2FVY%3D&$top=5\",\n    GetSiteConfig: \"https://bipulappstorage.table.core.windows.net/Config?sv=2018-03-28&si=ViewConfig&tn=config&sig=xcIl81rzfecn2QMunp5hG4VTp7BzTB4PRLWmSM1Y9Fc%3D\"\n};\n\nexport const BlogAPIEndpoint1 = {\n    Create: \"http://localhost:7071/api/BlogCreate\",\n    CreateNew: \"http://localhost:7071/api/BlogNew\",\n    Delete: \"http://localhost:7071/api/BlogDelete\",\n    GetById: \"http://localhost:7071/api/BlogGetById\"\n};","import { BlogAPIEndpoint, AzStorageRestAPI  } from \"configs/APIConfig\";\n\nexport async function BlogCreate(accessToken, data) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    headers.append(\"Content-Type\", \"application/json\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(data)\n    };\n\n    return fetch(BlogAPIEndpoint.Create, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogNew(accessToken, formData) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: formData\n    };\n\n    return fetch(BlogAPIEndpoint.CreateNew, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogDelete(accessToken, blogId) {\n    \n    const requestOptions = {\n        method: 'DELETE',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Authorization': 'Bearer ' + accessToken\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.Delete + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetById(blogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetOneBlog + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetAll(skipCount) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetBlogs + '/' + skipCount, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function GetSiteConfig() {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetSiteConfig, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\n// Az Storage REST API\n\nexport async function BlogGetByIdNew(blogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Accept\": \"application/json;odata=nometadata\"\n        }\n    };\n\n    return fetch(AzStorageRestAPI.GetOneBlog + \"&$filter=RowKey%20eq%20'\"+ blogId +\"'\", requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetAllNew(skipLastBlogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: {            \n            \"Accept\": \"application/json;odata=nometadata\"\n        }\n    };\n\n    return fetch(AzStorageRestAPI.GetBlogs + \"&$filter=RowKey%20gt%20'\"+ skipLastBlogId +\"'\", requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function GetSiteConfigNew() {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Accept\": \"application/json;odata=nometadata\"\n        }\n    };\n\n    return fetch(AzStorageRestAPI.GetSiteConfig, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}"],"names":["DisplayError","error","React","Typography","variant","errorCode","DisplayLoading","useStyles","makeStyles","root","margin","padding","LoginPage","classes","accounts","useMsal","account","useAccount","authRequest","loginRequest","useState","isAPIActive","setIsAPIActive","useEffect","GetSiteConfig","then","response","undefined","Layout","Paper","elevation","className","MsalAuthenticationTemplate","interactionType","InteractionType","authenticationRequest","errorComponent","loadingComponent","AuthenticatedTemplate","name","paragraph","sectionTitle","Metadata","Title","LoginPageMetadata","Description","BlogAPIEndpoint","AzStorageRestAPI","BlogNew","accessToken","formData","headers","Headers","bearer","append","requestOptions","method","body","fetch","json","catch","console","log","BlogDelete","blogId","BlogGetById","BlogGetByIdNew","BlogGetAllNew","skipLastBlogId","GetSiteConfigNew"],"sourceRoot":""}