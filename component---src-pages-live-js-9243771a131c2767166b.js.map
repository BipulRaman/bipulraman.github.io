{"version":3,"sources":["webpack://bipul-raman/./src/configs/APIConfig.js","webpack://bipul-raman/./src/pages/live.js","webpack://bipul-raman/./src/services/BlogService.js"],"names":["graphConfig","graphMeEndpoint","BlogAPIEndpoint","Create","CreateNew","Delete","GetBlog","GetSiteConfig","GetYTLiveUrlKey","useStyles","makeStyles","root","margin","padding","height","rootNoLive","sectionTitle","paddingBottom","videoContainer","position","video","top","left","width","LivePage","classes","useState","youtubeLiveUrlKey","setYoutubeLiveUrlKey","useEffect","GetYTLIveUrlKey","response","console","elevation","className","variant","src","frameborder","allowfullscreen","headers","bearer","requestOptions","method","body","formData","fetch","error","accessToken"],"mappings":"wKAAO,IAAMA,EAAc,CACvBC,gBAAiB,uCAGRC,EAAkB,CAC3BC,OAD2B,uDAE3BC,UAF2B,oDAG3BC,OAH2B,uDAI3BC,QAJ2B,uDAK3BC,cAL2B,6DAM3BC,gBAAiB,+D,6ICHfC,GAAYC,QAAW,iBAAO,CAChCC,KAAM,CACFC,OADE,GAEFC,QAFE,GAGFC,OAAQ,QAEZC,WAAY,CACRH,OADQ,GAERC,QAAS,IAEbG,aAAc,CACVC,cAAe,IAEnBC,eAAgB,CACZC,SADY,WAEZF,cAFY,SAGZH,OAAQ,KAEZM,MAAO,CACHD,SADG,WAEHE,IAFG,EAGHC,KAHG,EAIHC,MAJG,OAKHT,OAAQ,YAID,SAASU,IACpB,IAAMC,EAAUhB,IADe,GAEmBiB,cAFnB,MAExBC,EAFwB,KAELC,EAFK,KAc/B,OAVAC,gBAAU,YACNC,gBACU,iBACJ,IAAIC,IACFH,KACAI,qBALZH,IAWI,yBACM,KAAAF,EACE,qBAAOM,UAAP,EAAqBC,UAAWT,EAAQV,YACpC,qBAAYoB,QAAZ,KAAyBD,UAAWT,EAAQT,cAFlD,uCAOE,qBAAOiB,UAAP,EAAqBC,UAAWT,EAAQd,MACpC,uBAAKuB,UAAWT,EAAQP,gBACpB,0BAAQkB,IAAK,iCAAb,EAAkEC,YAAlE,IAAkFC,iBAAlF,EAAkGJ,UAAWT,EAAQL,a,8MCrC7I,+C,wCAAO,kGACGmB,EAAU,IADb,QAEGC,EAFH,YAIHD,4BACAA,4CACAA,0FAEME,EAAiB,CACnBC,OADmB,OAEnBH,QAFmB,EAGnBI,KAAMC,GAXP,kBAcIC,MAAM3C,eAAN,SACG,SAAA6B,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAId,YAAJ,OAhBb,4C,sBAmBP,+C,wCAAO,8FAEGS,EAAiB,CACnBC,OADmB,SAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,cAAiB,UAAYQ,IAPlC,kBAWIF,MAAM3C,gBAAD,EAAL,SACG,SAAA6B,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAId,YAAJ,OAbb,4C,sBAgBP,6C,wCAAO,4FAEGS,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAAgB,qBAPrB,kBAWIM,MAAM3C,iBAAD,EAAL,SACG,SAAA6B,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAId,YAAJ,OAbb,4C,sBAgBP,4C,wCAAO,2FAEGS,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAAgB,qBAPrB,kBAWIM,MAAM3C,aAAN,SACG,SAAA6B,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAId,YAAJ,OAbb,4C,sBAgBP,4C,wCAAO,2FAEGS,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAAgC,mDANrC,kBAUIM,MAAM3C,qBAAD,gBAAL,SACG,SAAA6B,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAe,GAAK,OAAId,YAAJ,OAZb,4C","file":"component---src-pages-live-js-9243771a131c2767166b.js","sourcesContent":["export const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n\nexport const BlogAPIEndpoint = {\n    Create: \"https://bipulappapi.azurewebsites.net/api/BlogCreate\",\n    CreateNew: \"https://bipulappapi.azurewebsites.net/api/BlogNew\",\n    Delete: \"https://bipulappapi.azurewebsites.net/api/BlogDelete\",\n    GetBlog: \"https://bipulapppublicapi.azurewebsites.net/api/Blog\",\n    GetSiteConfig: \"https://bipulapppublicapi.azurewebsites.net/api/SiteConfig\",\n    GetYTLiveUrlKey: \"https://bipulapppublicapi.azurewebsites.net/api/SiteConfig\"\n};\n\nexport const BlogAPIEndpoint1 = {\n    Create: \"http://localhost:7071/api/BlogCreate\",\n    CreateNew: \"http://localhost:7071/api/BlogNew\",\n    Delete: \"http://localhost:7071/api/BlogDelete\",\n    GetById: \"http://localhost:7071/api/BlogGetById\"\n};","import React, { useEffect, useState } from \"react\";\nimport Layout from '../layout/Layout';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { GetYTLIveUrlKey } from \"../services/BlogService\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        margin: 20,\n        padding: 20,\n        height: \"80vh\",\n    },\n    rootNoLive: {\n        margin: 20,\n        padding: 20,\n    },\n    sectionTitle: {\n        paddingBottom: 10\n    },\n    videoContainer: {\n        position: \"relative\",\n        paddingBottom: \"56.25%\",\n        height: \"0\"\n    },\n    video: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\"\n    }\n}));\n\nexport default function LivePage() {\n    const classes = useStyles();\n    const [youtubeLiveUrlKey, setYoutubeLiveUrlKey] = useState(null);\n\n    useEffect(() => {\n        GetYTLIveUrlKey()\n            .then((response) => {\n              if (response !== undefined) {\n                setYoutubeLiveUrlKey(response);\n                console.log(response);\n              }\n            });\n      }, []);\n\n    return (\n        <Layout>\n            { youtubeLiveUrlKey === \"\"  ?\n                <Paper elevation={3} className={classes.rootNoLive}>\n                    <Typography variant=\"h6\" className={classes.sectionTitle}>\n                        Bipul Raman is not LIVE right now.\n                    </Typography>\n                </Paper>\n                    : \n                <Paper elevation={3} className={classes.root}>\n                    <div className={classes.videoContainer}>\n                        <iframe src={\"https://www.youtube.com/embed/\"+ youtubeLiveUrlKey} frameborder=\"0\" allowfullscreen className={classes.video}></iframe>\n                    </div>\n                </Paper>\n            }\n        </Layout>\n    );\n}\n","import { BlogAPIEndpoint } from \"../configs/APIConfig\";\n\nexport async function BlogCreate(accessToken, data) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    headers.append(\"Content-Type\", \"application/json\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(data)\n    };\n\n    return fetch(BlogAPIEndpoint.Create, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogNew(accessToken, formData) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    \n    const requestOptions = {\n        method: \"POST\",\n        headers: headers,\n        body: formData\n    };\n\n    return fetch(BlogAPIEndpoint.CreateNew, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogDelete(accessToken, blogId) {\n    \n    const requestOptions = {\n        method: 'DELETE',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Authorization': 'Bearer ' + accessToken\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.Delete + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetById(blogId) {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetBlog + '/' + blogId, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function BlogGetAll() {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetBlog, requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function GetYTLIveUrlKey() {\n    \n    const requestOptions = {\n        method: 'GET',\n        headers: { \n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        }\n    };\n\n    return fetch(BlogAPIEndpoint.GetYTLiveUrlKey + \"/YTLiveUrlKey\", requestOptions)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}"],"sourceRoot":""}